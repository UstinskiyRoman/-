unit URavenTest;

interface

uses
  WinApi.Windows, WinApi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
  Vcl.StdCtrls, Vcl.OleCtrls, Vcl.ComCtrls, Vcl.CheckLst,
  Vcl.ExtCtrls, Vcl.Buttons,WinApi.ShellApi, Vcl.Menus, // MSHTML, jsWebBrowser,
  UTimerForTrainer, UCourse, Generics.Collections, UModes, UStatistic,
  UFormBase, UTools, UConfigClient, //UExtendReasoning,  UTaskMetaInfo,
  UTaskInfo, UTypeTasks, WinApi.MMSystem, System.ImageList,
  Vcl.ImgList, UCustomMessageBox, SHDocVw, UMainMenu, //UReasoning,
  System.IOUtils, UTester,
  UTaskResourcesManager, UDataModuleBase, Data.DB, Data.Win.ADODB;

type
    TFRavenTest = class(TFormBase)
    PanelWB: TPanel;
    Label1: TLabel;
    btnHelp: TBitBtn;
    btnPauseTest: TBitBtn;
    btnNext: TBitBtn;
    btnExit: TBitBtn;

    Image1: TImage;
    Image2: TImage;
    Image3: TImage;
    Image4: TImage;
    Image5: TImage;
    Image6: TImage;
    Image7: TImage;
    Image8: TImage;
    questionImage: TImage;
    StatusBar1: TStatusBar;
    StatusBarUserInfo: TStatusBar;
    Label3: TLabel;
    Label4: TLabel;
    Label2: TLabel;
    procedure ImageClick(Sender: TObject);
    procedure ImageLoad(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btnNextClick(Sender: TObject);
    procedure btnExitClick(Sender: TObject);
    function HardLevel(): Char;

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FRavenTest: TFRavenTest;
  IsFinishedTest: Boolean;
  RavenLvl: Integer = 1;

implementation

uses  UModeTestMenu;
{$R *.dfm}


function TFRavenTest.HardLevel() : Char;
begin
  case HardLvl of
  -1: Result:= 'A';
  0: Result:= 'A';
  1: Result:= 'B';
  2: Result:= 'C';
  end;
end;


procedure TFRavenTest.ImageClick(Sender: Tobject);
var Answer, HardLevl, dir, ImageName, TrueAnswer: String;
begin
   HardLevl:= HardLevel();
   label2.caption:= HardLevl;
   dir:= '..\..\..\..\data\Pictures\'+ HardLevl + IntToStr(RavenLvl) + '_0.bmp';
    ImageName:= ExtractFileName(dir);
  TrueAnswer := DataModuleBase.GetAnswerImage('"Pictures\'+ ImageName + '"');
  Answer := 'Pictures\'+ (Sender as TImage).Hint + '.bmp';
    if (Answer = TrueAnswer) then
      ShowMessage('Правильно!')
    else
      ShowMessage('Неправильно :(');

end;


procedure TFRavenTest.ImageLoad(Sender: TObject);
var
i: integer;
HardLevl: String;
Image: TImage;
begin
   HardLevl:= HardLevel();

   //Картинки
  questionImage.Picture.LoadFromFile('..\..\..\..\data\Pictures\' + HardLevl + IntToStr(RavenLvl) + '_0.bmp');
    for i := 1 to 8 do
    begin
    {TempImage:= (FindComponent('Image'+IntToStr(I)) As TImage);
      TempImage.OnClick := nil;
      TempImage.OnClick:= ImageClick;
      TempImage.Picture:= nil;
      TempImage.Picture.LoadFromFile('..\..\..\..\data\Pictures\' + HardLevl + IntToStr(RavenLvl) + '_' + IntToStr(I) + '.bmp');
      label2.caption:= '..\..\..\..\data\Pictures\' + HardLevl + IntToStr(RavenLvl) + '_' + IntToStr(I) + '.bmp';
      TempImage.Name := '';
      TempImage.Name := HardLevl + IntToStr(RavenLvl) + '_' + IntToStr(I);
      label3.caption:=  HardLevl + IntToStr(RavenLvl) + '_' + IntToStr(I);}

      Image := TImage(FindComponent('Image'+IntToStr(I)));

      Image.OnClick := ImageClick;

      Image.Picture.LoadFromFile('..\..\..\..\data\Pictures\' + HardLevl + IntToStr(RavenLvl) + '_' + IntToStr(I) + '.bmp');

      Image.Hint := HardLevl + IntToStr(RavenLvl) + '_' + IntToStr(I);
      Label2.Caption:= Image.Name;
      Label3.Caption:= Image.Hint;


    end;
//Выбор правильного варианта
  //Answer := DataModuleBase.GetAnswerImage('"Pictures\"'+ ImageName);
end;


procedure TFRavenTest.btnExitClick(Sender: TObject);
begin
FRavenTest.Close();
end;

procedure TFRavenTest.btnNextClick(Sender: TObject);
begin
RavenLvl:= RavenLvl + 1;
ImageLoad(Self);
end;

procedure TFRavenTest.FormCreate(Sender: TObject);
var
i, o: integer;
HardLevl: String;
begin
  ImageLoad(Self);


//  frmExtReasoning := TFExtendReasoning.Create(Self);
//  frmExtReasoning.Parent := panelBackground;
//  frmExtReasoning.Align := alClient;
//  frmExtReasoning.Visible := false;
//  frmExtReasoning.btnClose.OnClick := Self.OnCloseExtendReasoning;
  //IsFinishedTest:=false;
  //StatusBarUserInfo.Panels[0].Text:=FMainMenu.UserInfo.ToString();


end;

end.
